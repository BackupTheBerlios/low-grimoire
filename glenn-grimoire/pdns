# This spell released under the terms of the GNU General Public License
# as they appear in http://www.gnu.org/licenses/gpl.txt
  VERSION=( "2.9.18" "2.9.17" )
 CATEGORY="network dns"
ATTRIBUTE="server"
   SOURCE="$SPELL-$VERSION"
 HOMEPAGE="http://www.powerdns.com"
      URL="http://downloads.powerdns.com/releases"
      REQ=( ""
#	    "sqlite:gsqlite --with-sqlite-lib=/usr/lib::add sqlite support"
	    "libpq++:gpgsql --with-pgsql-includes=/usr/include::add postgres support"
	    "mysql:gmysql::add mysql support"
#	    "oracle:oracle::add oracle support"
#	    "db2:db2::add db2 support"
	    "tdb:xdb::add tdb support"
#	    "unixODBC:odbc::add odbc support"
	    "openldap:ldap::add ldap support"
	    ":geo::add geo backend support"
	    ":pipe::add pipe support" )
      OPTS="--enable-pdns_server --enable-recursor --enable-verbose-logging"
#      OPTS="--enable-pdns_server --enable-recursor"
FRESHMEAT="pdns"
DESC="The PowerDNS Nameserver is a modern, advanced and high performance authoritative-only nameserver.
The PowerDNS Nameserver is a modern, advanced and high performance
authoritative-only nameserver. It is written from scratch and conforms to
all relevant DNS standards documents. Furthermore, PowerDNS interfaces with
almost any database.
"

fix_opts() {
  if grep -q 'with-modules' <<<$1; then
    echo "$1";
    return;
  fi
  for OPT in $1; do
    if grep -q '^--' <<<$OPT; then
      echo -n "$OPT ";
    else
      BACKENDS="$BACKENDS $OPT"
    fi
  done
  echo -n "--with-modules=\"\" --with-dynmodules=\"${BACKENDS:1}\""
}

patches() {
  if [ "$VERSION" == "2.9.18" ]; then
    patch -p1 <<'EOF'
diff -ur pdns-2.9.18~/modules/ldapbackend/utils.hh pdns-2.9.18/modules/ldapbackend/utils.hh
--- pdns-2.9.18~/modules/ldapbackend/utils.hh	2005-04-23 16:40:15.000000000 -0500
+++ pdns-2.9.18/modules/ldapbackend/utils.hh	2005-07-19 13:00:23.000000000 -0500
@@ -73,7 +73,7 @@
 }
 
 
-inline string ip2ptr4( string ip )
+inline string ip2ptr4( const string& ip )
 {
 	string ptr;
 	vector<string> parts;
@@ -89,7 +89,7 @@
 }
 
 
-inline string ip2ptr6( string ip )
+inline string ip2ptr6( const string& ip )
 {
 	string ptr, part, defstr;
 	vector<string> parts;
@@ -116,4 +116,19 @@
 	return ptr + "ip6.arpa";
 }
 
+
+inline string strbind( const string& search, const string& replace, string subject )
+{
+	size_t pos = 0;
+
+
+	while( ( pos = subject.find( search, pos ) ) != string::npos )
+	{
+		subject.replace( pos, search.size(), replace );
+		pos += replace.size();
+	}
+
+	return subject;
+}
+
 #endif
EOF
  fi
}

build() {
  patches                   &&
  eval \
  ./configure --prefix=/usr \
              $(fix_opts "$OPTS") &&
  make                      &&
  prepare_install           &&
  make install              &&
  install -o root -g root -m 755 pdns/pdns /etc/init.d/pdns
}
