           MODULE=bdb
         VERSION=0.3.2
          SOURCE=$MODULE-$VERSION.tar.gz
SOURCE_DIRECTORY=$BUILD_DIRECTORY/$MODULE-$VERSION
   SOURCE_URL[0]=ftp://moulon.inra.fr/pub/ruby/$MODULE-$VERSION.tar.gz
      MAINTAINER=jason@xorit.net
        WEB_SITE=http://moulon.inra.fr/ruby/bdb.html
           SHORT="Ruby API for Berkeley DB"
         ENTERED=20020718
         UPDATED=20020718
cat << EOF
Developers may choose to store data in any of several different storage structures to satisfy the requirements of a particular application. In database terminology, these storage structures and the code that operates on them are called access methods. The library includes support for the following access methods: 

B+tree: Stores keys in sorted order, using a default function that does lexicographical ordering of keys. 
Hashing: Stores records in a hash table for fast searches based on strict equality, using a default that hashes on the key as a bit string. Extended Linear Hashing modifies the hash function used by the table as new records are inserted, in order to keep buckets underfull in the steady state. 
Fixed and Variable-Length Records: Stores fixed- or variable-length records in sequential order. Record numbers may be immutable, requiring that new records be added only at the end of the database, or mutable, permitting new records to be inserted between existing records. 
EOF
